<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0 (Python 3.10.4 on win32)" generated="20220409 13:06:35.983" rpa="false" schemaversion="3">
<suite id="s1" name="notre API" source="E:\Dossiers DEV\Robot Framework\notre_API">
<suite id="s1-s1" name="Tests" source="E:\Dossiers DEV\Robot Framework\notre_API\tests">
<suite id="s1-s1-s1" name="Main" source="E:\Dossiers DEV\Robot Framework\notre_API\tests\main.robot">
<test id="s1-s1-s1-t1" name="Authentifier utilisateur" line="18">
<kw name="Verifier si l'utilisateur existe dans la bdd" library="loginBack">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>pymysql</arg>
<arg>database='demo', user='root', password='', host='localhost'</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20220409 13:06:37.008" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='demo', user='root', password='', host='localhost')) </msg>
<status status="PASS" starttime="20220409 13:06:36.818" endtime="20220409 13:06:37.027"/>
</kw>
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<arg>select id from users where username = '${USERNAME}' and password = md5('${PASSWORD}')</arg>
<arg>1</arg>
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this
will throw an AssertionError. Set optional input `sansTran` to True to run command without an explicit
transaction commit or rollback.</doc>
<msg timestamp="20220409 13:06:37.028" level="INFO">Executing : Row Count Is Equal To X  |  select id from users where username = 'Dev' and password = md5('Yep')  |  1 </msg>
<msg timestamp="20220409 13:06:37.029" level="INFO">Executing : Row Count  |  select id from users where username = 'Dev' and password = md5('Yep') </msg>
<status status="PASS" starttime="20220409 13:06:37.028" endtime="20220409 13:06:37.040"/>
</kw>
<status status="PASS" starttime="20220409 13:06:36.818" endtime="20220409 13:06:37.040"/>
</kw>
<kw name="Authentifier un utilisateur dans l'application" library="loginBack">
<kw name="Create Session" library="RequestsLibrary">
<arg>session3</arg>
<arg>${WEBSITE_LINK}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220409 13:06:37.042" level="INFO">Creating Session using : alias=session3, url=http://localhost/demo/api/user, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220409 13:06:37.041" endtime="20220409 13:06:37.043"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>session3</arg>
<arg>url=/${WEBSITE_LINK}/login.php?username=${USERNAME}&amp;password=${PASSWORD}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220409 13:06:37.093" level="INFO">GET Request : url=http://localhost/demo/api/user/login.php?username=Dev&amp;password=Yep 
 path_url=/demo/api/user/login.php?username=Dev&amp;password=Yep 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220409 13:06:37.095" level="INFO">GET Response : url=http://localhost/demo/api/user/login.php?username=Dev&amp;password=Yep 
 status=200, reason=OK 
 headers={'Date': 'Sat, 09 Apr 2022 11:06:37 GMT', 'Server': 'Apache/2.4.51 (Win64) PHP/7.4.26', 'X-Powered-By': 'PHP/7.4.26', 'Content-Length': '74', 'Keep-Alive': 'timeout=5, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'text/html; charset=UTF-8'} 
 body={"status":true,"message":"Successfully Login!","id":"46","username":"Dev"} 
 </msg>
<msg timestamp="20220409 13:06:37.097" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220409 13:06:37.043" endtime="20220409 13:06:37.100"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220409 13:06:37.102" level="INFO">${json} = {'status': True, 'message': 'Successfully Login!', 'id': '46', 'username': 'Dev'}</msg>
<status status="PASS" starttime="20220409 13:06:37.100" endtime="20220409 13:06:37.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${json}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220409 13:06:37.106" level="INFO">{'status': True, 'message': 'Successfully Login!', 'id': '46', 'username': 'Dev'}</msg>
<status status="PASS" starttime="20220409 13:06:37.105" endtime="20220409 13:06:37.108"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220409 13:06:37.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20220409 13:06:37.109" endtime="20220409 13:06:37.113"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${json['message']}</arg>
<arg>Successfully Login!</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220409 13:06:37.114" endtime="20220409 13:06:37.116"/>
</kw>
<status status="PASS" starttime="20220409 13:06:37.041" endtime="20220409 13:06:37.116"/>
</kw>
<tag>Third</tag>
<status status="PASS" starttime="20220409 13:06:36.816" endtime="20220409 13:06:37.117"/>
</test>
<status status="PASS" starttime="20220409 13:06:36.034" endtime="20220409 13:06:37.121"/>
</suite>
<status status="PASS" starttime="20220409 13:06:36.031" endtime="20220409 13:06:37.124"/>
</suite>
<status status="PASS" starttime="20220409 13:06:35.990" endtime="20220409 13:06:37.129"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">Third</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="notre API">notre API</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Tests">notre API.Tests</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="Main">notre API.Tests.Main</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
